{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["styleObject","width","display","justifyContent","alignItems","boxShadow","styleButton","height","borderRadius","color","border","fontWeight","backgroundColor","styleProfile","textAlign","textTransform","letterSpacing","App","state","fullName","bio","imgSrc","profession","isShown","date","tick","timerID","Date","this","setInterval","clearInterval","setState","style","src","alt","toLocaleTimeString","onClick","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAGMA,EAAc,CAClBC,MAAO,MACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,UAAW,iCAEPC,EAAc,CAClBL,MAAO,QACPM,OAAQ,OACRC,aAAc,OACdC,MAAO,QACPC,OAAQ,OACRC,WAAY,OACZC,gBAAiB,QAEbC,EAAe,CACnBX,QAAQ,OACRO,MAAO,OACPK,UAAW,SACXC,cAAe,aACfC,cAAe,MACfL,WAAY,QA8DCM,E,4MA3DbC,M,aACEC,SAAU,WACVC,IAAK,eACLC,OACE,oHACFC,WAAY,2BACZC,SAAS,EACTC,KAAM,GACNC,KAAM,GACNC,QAAS,I,OACH,IAAIC,M,uDAGZ,WAAqB,IAAD,OAClBC,KAAKF,QAAUG,aAAY,kBAAM,EAAKJ,SAAQ,O,kCAGhD,WACEK,cAAcF,KAAKF,W,kBAGrB,WACEE,KAAKG,SAAS,CACZP,KAAM,IAAIG,S,oBAId,WAAU,IAAD,OACP,OACE,mCACE,gCACGC,KAAKV,MAAMK,SACV,sBAAKS,MAAOhC,EAAZ,UACE,qBAAKiC,IAAKL,KAAKV,MAAMG,OAAQa,IAAI,KACjC,sBAAKF,MAAOnB,EAAZ,UACE,8CAAiBe,KAAKV,MAAMC,YAC5B,yCAAYS,KAAKV,MAAME,IAAvB,OAEA,gDAAmBQ,KAAKV,MAAMI,oBAIpC,8BACE,mCAAMM,KAAKV,MAAMM,KAAKW,qBAAtB,SAEF,8BACE,wBACEC,QAAS,kBAAM,EAAKL,SAAS,CAAER,SAAU,EAAKL,MAAMK,WACpDS,MAAO1B,EAFT,SAIGsB,KAAKV,MAAMK,QAAU,OAAS,oB,GAnD3Bc,IAAMC,WCfTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c86ca55.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst styleObject = {\n  width: \"50%\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  boxShadow: \"0 5px 10px 2px rgba(0.0.0.25)\",\n};\nconst styleButton = {\n  width: \"300px\",\n  height: \"40px\",\n  borderRadius: \"10px\",\n  color: \"white\",\n  border: \"none\",\n  fontWeight: \"bold\",\n  backgroundColor: \"blue\",\n};\nconst styleProfile = {\n  display:\"bloc\",\n  color: \"blue\",\n  textAlign: \"center\",\n  textTransform: \"capitalize\",\n  letterSpacing: \"3px\",\n  fontWeight: \"bold\",\n};\nclass App extends React.Component {\n  state = {\n    fullName: \"Jhon Doe\",\n    bio: \"developement\",\n    imgSrc:\n      \"https://png.pngtree.com/png-vector/20191104/ourmid/pngtree-businessman-avatar-cartoon-style-png-image_1953664.jpg\",\n    profession: \"Front End Web Developper\",\n    isShown: false,\n    date: \"\",\n    tick: \"\",\n    timerID: \"\",\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({\n      date: new Date(),\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <div>\n          {this.state.isShown && (\n            <div style={styleObject}>\n              <img src={this.state.imgSrc} alt=\"\" />\n              <div style={styleProfile}>\n                <div> fullName: {this.state.fullName}</div>\n                <div> bio: {this.state.bio} </div>\n\n                <div>Profession : {this.state.profession}</div>\n              </div>\n            </div>\n          )}\n          <div>\n            <h2> {this.state.date.toLocaleTimeString()}.</h2>\n          </div>\n          <div>\n            <button\n              onClick={() => this.setState({ isShown: !this.state.isShown })}\n              style={styleButton}\n            >\n              {this.state.isShown ? \"Hide\" : \"Show\"}\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}